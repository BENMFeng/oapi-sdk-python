# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.corehr.v2 import *


def main():
	# 构建client
	client = lark.Client.builder() \
		.app_id("APP_ID") \
		.app_secret("APP_SECRET") \
		.log_level(lark.LogLevel.DEBUG) \
		.build()

	# 构造请求对象
	request: CreatePersonRequest = lark.corehr.v2.CreatePersonRequest.builder() \
		.client_token("12454646") \
		.request_body(lark.corehr.v2.PersonInfo.builder()
					  .name_list([])
					  .gender(Enum.builder().build())
					  .date_of_birth("2020-01-01")
					  .race(Enum.builder().build())
					  .marital_status(Enum.builder().build())
					  .phone_list([])
					  .address_list([])
					  .email_list([])
					  .work_experience_list([])
					  .education_list([])
					  .bank_account_list([])
					  .national_id_list([])
					  .dependent_list([])
					  .emergency_contact_list([])
					  .date_entered_workforce("2020-10-01")
					  .profile_image_id("dfysuc8x76dsfsw")
					  .age(22)
					  .personal_profile([])
					  .native_region("6863326262618752111")
					  .hukou_type(Enum.builder().build())
					  .hukou_location("山东省平阴县")
					  .talent_id("6863326262618752123")
					  .custom_fields([])
					  .build()) \
		.build()

	# 发起请求
	response: CreatePersonResponse = client.corehr.v2.person.create(request)

	# 处理失败返回
	if not response.success():
		lark.logger.error(
			f"client.corehr.v2.person.create failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
		return

	# 处理业务结果
	lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
	main()