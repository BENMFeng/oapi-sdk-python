# Code generated by Lark OpenAPI.

from typing import *
from typing import IO
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetCalendarEventRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.calendar_id: Optional[str] = None
        self.event_id: Optional[str] = None

    @staticmethod
    def builder() -> "GetCalendarEventRequestBuilder":
        return GetCalendarEventRequestBuilder()


class GetCalendarEventRequestBuilder(object):

    def __init__(self, get_calendar_event_request: GetCalendarEventRequest = GetCalendarEventRequest()) -> None:
        get_calendar_event_request.http_method = HttpMethod.GET
        get_calendar_event_request.uri = "/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id"
        get_calendar_event_request.token_types = {AccessTokenType.TENANT, AccessTokenType.USER}
        self._get_calendar_event_request: GetCalendarEventRequest = get_calendar_event_request
    
    def calendar_id(self, calendar_id: str) -> "GetCalendarEventRequestBuilder":
        self._get_calendar_event_request.calendar_id = calendar_id
        self._get_calendar_event_request.paths["calendar_id"] = calendar_id
        return self
    
    def event_id(self, event_id: str) -> "GetCalendarEventRequestBuilder":
        self._get_calendar_event_request.event_id = event_id
        self._get_calendar_event_request.paths["event_id"] = event_id
        return self
    

    def build(self) -> GetCalendarEventRequest:
        return self._get_calendar_event_request
